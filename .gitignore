# Xcode
#
# gitignore contributors: remember to update Global/Xcode.gitignore, Objective-C.gitignore & Swift.gitignore

# macOS-specific metadata files created by Finder to store folder view settings.
.DS_Store

## User settings
xcuserdata/

## Obj-C/Swift specific
*.hmap

## App packaging
*.ipa
*.dSYM.zip
*.dSYM

## Playgrounds
timeline.xctimeline
playground.xcworkspace

# Swift Package Manager
#
# Add this line if you want to avoid checking in source code from Swift Package Manager dependencies.
# Packages/
# Package.pins
# Package.resolved
# *.xcodeproj
#
# Xcode automatically generates this directory with a .xcworkspacedata file and xcuserdata
# hence it is not needed unless you have added a package configuration file to your project
# .swiftpm

.build/

# CocoaPods
#
# We recommend against adding the Pods directory to your .gitignore. However
# you should judge for yourself, the pros and cons are mentioned at:
# https://guides.cocoapods.org/using/using-cocoapods.html#should-i-check-the-pods-directory-into-source-control
#
# Pods/
#
# Add this line if you want to avoid checking in source code from the Xcode workspace
# *.xcworkspace

# Carthage
#
# Add this line if you want to avoid checking in source code from Carthage dependencies.
# Carthage/Checkouts

Carthage/Build/

# fastlane
#
# It is recommended to not store the screenshots in the git repo.
# Instead, use fastlane to re-generate the screenshots whenever they are needed.
# For more information about the recommended setup visit:
# https://docs.fastlane.tools/best-practices/source-control/#source-control

fastlane/report.xml
fastlane/Preview.html
fastlane/screenshots/**/*.png
fastlane/test_output


# C# gitignore

# Build Folders (you can keep bin if you'd like to share some builds, but generally you shouldn't)
[Bb]in/
[Oo]bj/

# User-specific files
*.user
*.suo
*.userosscache
*.sln.docstates

# MonoDevelop
*.pidb
*.userprefs

# Visual Studio Code
.vscode/

# Visual Studio temporary files, build results, and
# files generated by popular Visual Studio add-ons.
*_i.c
*_p.c
*.cache
*.csproj.user
*.dbmdl
*.bak
*.backup
*.log

# Auto-generated files (including tooling files, temp files, etc.)
*.vspscc
*_i.asm
*_p.asm

# DotNet Core artifacts
project.lock.json
project.fragment.lock.json
artifacts/

# NuGet packages
*.nupkg
.nuget/

# ASP.NET Scaffolding
ScaffoldingReadMe.txt
